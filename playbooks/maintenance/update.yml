---
# System update playbook for HX Infrastructure
# Performs safe system updates with rollback capability

- name: HX Infrastructure System Updates
  hosts: all
  become: true
  gather_facts: true
  serial: "{{ hx_update_serial | default('25%') }}"
  vars:
    hx_update_timestamp: "{{ ansible_date_time.epoch }}"
    hx_update_reboot_required: false
    hx_update_backup_before: true

  pre_tasks:
    - name: Create pre-update snapshot
      block:
        - name: Backup critical configurations before update
          archive:
            path:
              - /etc/
              - /boot/grub/
            dest: "/tmp/pre-update-backup-{{ hx_update_timestamp }}.tar.gz"
            owner: root
            group: root
            mode: '0600'
          when: hx_update_backup_before

        - name: Record current package versions
          shell: dpkg -l > /tmp/packages-before-update-{{ hx_update_timestamp }}.txt
          when: ansible_os_family == "Debian"

        - name: Record current kernel version
          shell: uname -r > /tmp/kernel-before-update-{{ hx_update_timestamp }}.txt
      tags:
        - hx_update
        - hx_backup

  tasks:
    - name: Update package cache
      apt:
        update_cache: true
        cache_valid_time: 0
      when: ansible_os_family == "Debian"
      tags:
        - hx_update
        - hx_cache

    - name: Check for available updates
      apt:
        upgrade: "no"
        update_cache: true
      register: hx_available_updates
      when: ansible_os_family == "Debian"
      tags:
        - hx_update
        - hx_check

    - name: Display available updates
      debug:
        msg: |
          Available Updates Summary:
          - Total packages to upgrade: {{ hx_available_updates.changed | default(0) }}
          - Security updates included: true (if any)

          Proceeding with safe update process...
      when: hx_available_updates is defined
      tags:
        - hx_update
        - hx_info

    - name: Perform security updates only
      apt:
        upgrade: safe
        autoremove: true
        autoclean: true
      register: hx_security_updates
      when: ansible_os_family == "Debian"
      tags:
        - hx_update
        - hx_security

    - name: Check if reboot is required
      stat:
        path: /var/run/reboot-required
      register: hx_reboot_required_file
      tags:
        - hx_update
        - hx_reboot

    - name: Set reboot required flag
      set_fact:
        hx_update_reboot_required: true
      when: hx_reboot_required_file.stat.exists
      tags:
        - hx_update
        - hx_reboot

    - name: Update system packages (non-kernel)
      apt:
        upgrade: safe
        autoremove: true
        autoclean: true
      when:
        - ansible_os_family == "Debian"
        - not hx_update_reboot_required
      register: hx_package_updates
      tags:
        - hx_update
        - hx_packages

    - name: Clean package cache
      apt:
        autoclean: true
        autoremove: true
      when: ansible_os_family == "Debian"
      tags:
        - hx_update
        - hx_cleanup

  post_tasks:
    - name: Record post-update package versions
      shell: dpkg -l > /tmp/packages-after-update-{{ hx_update_timestamp }}.txt
      when: ansible_os_family == "Debian"
      tags:
        - hx_update
        - hx_record

    - name: Generate update report
      template:
        src: update-report.j2
        dest: "/tmp/update-report-{{ hx_update_timestamp }}.txt"
        owner: root
        group: root
        mode: '0644'
      tags:
        - hx_update
        - hx_report

    - name: Display update summary
      debug:
        msg: |
          HX Infrastructure Update Complete!

          Update Summary:
          - Security updates: {{ 'Applied' if hx_security_updates.changed else 'None available' }}
          - Package updates: {{ 'Applied' if hx_package_updates.changed else 'None available' }}
          - Reboot required: {{ 'Yes' if hx_update_reboot_required else 'No' }}

          {% if hx_update_reboot_required %}
          WARNING: System reboot is required to complete updates.
          Schedule maintenance window and run: sudo reboot
          {% endif %}

          Reports saved to:
          - /tmp/update-report-{{ hx_update_timestamp }}.txt
          - /tmp/packages-after-update-{{ hx_update_timestamp }}.txt
      tags:
        - hx_update
        - hx_summary

- name: Handle Reboot Required Systems
  hosts: all
  become: true
  gather_facts: false
  vars:
    hx_auto_reboot: false
    hx_reboot_timeout: 300

  tasks:
    - name: Check reboot requirement
      stat:
        path: /var/run/reboot-required
      register: hx_needs_reboot

    - name: falsetify about required reboot
      debug:
        msg: |
          ATTENTION: {{ inventory_hostname }} requires a reboot to complete updates.

          {% if hx_auto_reboot %}
          Auto-reboot is ENABLED. System will reboot automatically.
          {% else %}
          Auto-reboot is DISABLED. Manual reboot required.

          To reboot manually:
          1. Schedule maintenance window
          2. Run: sudo reboot
          3. Verify services after reboot
          {% endif %}
      when: hx_needs_reboot.stat.exists

    - name: Perform automatic reboot (if enabled)
      reboot:
        reboot_timeout: "{{ hx_reboot_timeout }}"
        msg: "HX Infrastructure automatic reboot for system updates"
      when:
        - hx_needs_reboot.stat.exists
        - hx_auto_reboot
      tags:
        - hx_update
        - hx_reboot

    - name: Verify services after reboot
      systemd:
        name: "{{ item }}"
        state: started
      loop:
        - sshd
        - fail2ban
        - ufw
      when:
        - hx_needs_reboot.stat.exists
        - hx_auto_reboot
      ignore_errors: true
      tags:
        - hx_update
        - hx_verification
