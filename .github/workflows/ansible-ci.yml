# .github/workflows/ansible-ci.yml
name: Ansible CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # ============================================================================
  # LINTING JOB: Ensures code quality and adherence to standards.
  # ============================================================================
  lint:
    name: "Code Quality & Linting"
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: "Checkout Repository"
        uses: actions/checkout@v4

      - name: "Set up Python 3.9"
        uses: actions/setup-python@v5
        with:
          python-version: '3.9' # Pinned version for reproducibility

      - name: "Install Linting Dependencies"
        run: |
          python -m pip install --upgrade pip
          pip install ansible-lint yamllint

      - name: "Run Linters"
        run: |
          yamllint .
          ansible-lint .

  # ============================================================================
  # TESTING JOB: Validates Ansible roles using Molecule.
  # ============================================================================
  test:
    name: "Test ${{ matrix.scenario }} on ${{ matrix.distro }}"
    runs-on: ubuntu-latest
    needs: lint
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        # Expands testing capabilities for different scenarios and distros
        scenario: [ 'default' ]
        distro: [ 'ubuntu2204', 'rockylinux9' ] # Example distros
    steps:
      - name: "Checkout Repository"
        uses: actions/checkout@v4

      - name: "Set up Python 3.9"
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: "Install Molecule Dependencies"
        run: |
          python -m pip install --upgrade pip
          pip install ansible-core molecule molecule-plugins[docker] docker

      - name: "Run Molecule Tests"
        run: molecule test -s ${{ matrix.scenario }}
        env:
          # Dynamically set the distro for the test
          MOLECULE_DISTRO: ${{ matrix.distro }}

  # ============================================================================
  # DEPLOYMENT JOB: Deploys to the staging environment securely.
  # ============================================================================
  deploy-staging:
    name: "Deploy to Staging"
    runs-on: ubuntu-latest
    needs: [lint, test]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: staging
    timeout-minutes: 30
    steps:
      - name: "Checkout Repository"
        uses: actions/checkout@v4

      - name: "Install Ansible"
        run: |
          python -m pip install --upgrade pip
          pip install ansible-core

      - name: "Add Staging Host to known_hosts"
        run: ssh-keyscan -H ${{ secrets.STAGING_HOST }} >> ~/.ssh/known_hosts

      - name: "Run Ansible Playbook via SSH Agent"
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.STAGING_SSH_KEY }}
      - run: |
          ansible-playbook -i inventory/staging playbooks/deploy.yml \
            --extra-vars "target_env=staging" \
            --user ${{ secrets.STAGING_USER }}
          # The insecure ANSIBLE_HOST_KEY_CHECKING variable is no longer needed.
