---

---
# Production Inventory for HX Infrastructure
# Phase 3.4 - Production Operations and Maintenance Automation

all:
  children:
    production:
      hosts:
        hx-prod-web-01:
          ansible_host: 10.0.1.10
          ansible_user: ubuntu
          server_role: web
          environment: production
        hx-prod-web-02:
          ansible_host: 10.0.1.11
          ansible_user: ubuntu
          server_role: web
          environment: production
        hx-prod-db-01:
          ansible_host: 10.0.1.20
          ansible_user: ubuntu
          server_role: database
          environment: production
        hx-prod-app-01:
          ansible_host: 10.0.1.30
          ansible_user: ubuntu
          server_role: application
          environment: production
        hx-prod-app-02:
          ansible_host: 10.0.1.31
          ansible_user: ubuntu
          server_role: application
          environment: production
      vars:
        # Production Environment Variables
        target_environment: production
        deployment_strategy: blue_green
        health_check_timeout: 300
        rollback_enabled: true

        # Blue-Green Configuration
        blue_port: 8080
        green_port: 8081

        # Monitoring Configuration
        monitoring_enabled: true
        alerting_enabled: true
        log_health_status: true

        # Maintenance Configuration
        maintenance_window_start: 2
        maintenance_window_end: 6
        enforce_maintenance_window: true

        # Database Configuration
        database_name: hx_infrastructure
        database_host: 10.0.1.20
        database_user: postgres

        # Service Discovery
        consul_datacenter: dc1
        service_discovery_enabled: true

        # Critical Services
        critical_services:
          - nginx
          - postgresql
          - docker
          - ssh
          - consul

        # Application Endpoints
        application_endpoints:
          - "http://{{ ansible_default_ipv4.address }}/health"
          - "http://{{ ansible_default_ipv4.address }}/api/status"

        # Alert Thresholds
        alert_thresholds:
          cpu_usage: 80
          memory_usage: 85
          disk_usage: 90
          response_time: 2000
          error_rate: 5

        # SLA Targets
        sla_targets:
          availability: 99.9
          response_time: 1000
          error_rate: 1

    canary:
      hosts:
        hx-prod-web-01:
          ansible_host: 10.0.1.10
          canary_port: 8082
      vars:
        canary_traffic_percentage: 10
        canary_monitoring_time: 600

    blue_green:
      children:
        - production
      vars:
        deployment_strategy: blue_green
        health_check_endpoint: "/health"

    monitoring:
      hosts:
        hx-prod-monitor-01:
          ansible_host: 10.0.1.40
          ansible_user: ubuntu
          server_role: monitoring
      vars:
        grafana_url: "http://10.0.1.40:3000"
        prometheus_url: "http://10.0.1.40:9090"
        alertmanager_url: "http://10.0.1.40:9093"

    load_balancers:
      hosts:
        hx-prod-lb-01:
          ansible_host: 10.0.1.5
          ansible_user: ubuntu
          server_role: load_balancer
      vars:
        load_balancer_type: nginx
        upstream_servers:
          - "10.0.1.30:8080"
          - "10.0.1.31:8080"

  vars:
    # Global Production Variables
    ansible_ssh_common_args: '-o StrictHostKeyChecking=yes'
    ansible_python_interpreter: /usr/bin/python3

    # Production Operations
    production_ops_enabled: true
    auto_recovery_enabled: true
    max_recovery_attempts: 3
    recovery_delay: 60

    # Health Monitoring
    health_monitoring_enabled: true
    apm_enabled: true
    predictive_monitoring_enabled: true

    # Maintenance Automation
    maintenance_automation_enabled: true
    security_updates_only: false
    auto_reboot: false

    # Incident Response
    incident_response_enabled: true
    auto_remediation_enabled: true
    escalation_enabled: true

    # Notification Configuration
    email_alerts_enabled: false
    slack_alerts_enabled: false
    pagerduty_alerts_enabled: false

    # Reporting
    generate_reports: true
    log_retention_days: 30
    report_format: json
