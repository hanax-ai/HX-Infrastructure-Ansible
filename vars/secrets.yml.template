---
# Secrets Template for HX Infrastructure
# 
# IMPORTANT: This is a template file. DO NOT put actual secrets here.
# 
# To use this template:
# 1. Copy this file to vars/secrets.yml
# 2. Replace all placeholder values with actual secrets
# 3. Encrypt the file with: ansible-vault encrypt vars/secrets.yml
# 4. Never commit the unencrypted secrets.yml file
#
# Usage in playbooks:
# - include_vars: vars/secrets.yml
#   no_log: true

# Database Credentials
hx_database_secrets:
  postgres:
    admin_user: "postgres"
    admin_password: "REPLACE_WITH_STRONG_PASSWORD"
    app_user: "hx_app_user"
    app_password: "REPLACE_WITH_STRONG_PASSWORD"
    replication_user: "replicator"
    replication_password: "REPLACE_WITH_STRONG_PASSWORD"
  
  # Connection strings (will be templated)
  postgres_url: "postgresql://{{ hx_database_secrets.postgres.app_user }}:{{ hx_database_secrets.postgres.app_password }}@{{ hx_database_host }}:{{ hx_database_port }}/{{ hx_database_name }}"

# API Keys and External Service Credentials
hx_api_secrets:
  openai:
    api_key: "sk-REPLACE_WITH_ACTUAL_OPENAI_API_KEY"
    organization_id: "org-REPLACE_WITH_ORG_ID"
  
  anthropic:
    api_key: "sk-ant-REPLACE_WITH_ACTUAL_ANTHROPIC_API_KEY"
  
  monitoring:
    grafana_admin_password: "REPLACE_WITH_STRONG_PASSWORD"
    prometheus_basic_auth: "REPLACE_WITH_BASIC_AUTH_STRING"

# SSL/TLS Certificates and Keys
hx_ssl_secrets:
  # Private keys (PEM format)
  private_key: |
    -----BEGIN PRIVATE KEY-----
    REPLACE_WITH_ACTUAL_PRIVATE_KEY_CONTENT
    -----END PRIVATE KEY-----
  
  # Certificate chain
  certificate: |
    -----BEGIN CERTIFICATE-----
    REPLACE_WITH_ACTUAL_CERTIFICATE_CONTENT
    -----END CERTIFICATE-----
  
  # CA certificate if using custom CA
  ca_certificate: |
    -----BEGIN CERTIFICATE-----
    REPLACE_WITH_CA_CERTIFICATE_CONTENT
    -----END CERTIFICATE-----

# SSH Keys and Access Credentials
hx_ssh_secrets:
  # Deploy key for accessing private repositories
  deploy_key_private: |
    -----BEGIN OPENSSH PRIVATE KEY-----
    REPLACE_WITH_ACTUAL_DEPLOY_KEY_CONTENT
    -----END OPENSSH PRIVATE KEY-----
  
  deploy_key_public: "ssh-rsa REPLACE_WITH_PUBLIC_KEY_CONTENT deploy@hx-infrastructure"
  
  # Service account SSH keys
  service_account_key: |
    -----BEGIN OPENSSH PRIVATE KEY-----
    REPLACE_WITH_SERVICE_ACCOUNT_KEY_CONTENT
    -----END OPENSSH PRIVATE KEY-----

# Application-Specific Secrets
hx_application_secrets:
  # JWT signing keys
  jwt_secret_key: "REPLACE_WITH_RANDOM_256_BIT_KEY"
  jwt_refresh_secret: "REPLACE_WITH_DIFFERENT_256_BIT_KEY"
  
  # Session encryption
  session_secret: "REPLACE_WITH_RANDOM_SESSION_SECRET"
  
  # Application passwords
  admin_password: "REPLACE_WITH_STRONG_ADMIN_PASSWORD"
  service_password: "REPLACE_WITH_SERVICE_PASSWORD"

# Third-party Integration Secrets
hx_integration_secrets:
  # Slack notifications
  slack_webhook_url: "https://hooks.slack.com/services/REPLACE/WITH/ACTUAL/WEBHOOK/URL"
  slack_bot_token: "xoxb-REPLACE-WITH-ACTUAL-BOT-TOKEN"
  
  # Email service (SendGrid, SES, etc.)
  email_api_key: "SG.REPLACE_WITH_ACTUAL_SENDGRID_API_KEY"
  smtp_password: "REPLACE_WITH_SMTP_PASSWORD"
  
  # Cloud provider credentials
  aws_access_key_id: "AKIAIOSFODNN7EXAMPLE"
  aws_secret_access_key: "wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY"
  
  # Container registry credentials
  docker_registry_username: "REPLACE_WITH_REGISTRY_USERNAME"
  docker_registry_password: "REPLACE_WITH_REGISTRY_PASSWORD"

# Backup and Recovery Secrets
hx_backup_secrets:
  # S3 or compatible storage for backups
  backup_access_key: "REPLACE_WITH_BACKUP_ACCESS_KEY"
  backup_secret_key: "REPLACE_WITH_BACKUP_SECRET_KEY"
  backup_encryption_key: "REPLACE_WITH_32_CHAR_ENCRYPTION_KEY"
  
  # Database backup encryption
  db_backup_passphrase: "REPLACE_WITH_STRONG_PASSPHRASE"

# Monitoring and Logging Secrets
hx_monitoring_secrets:
  # Log aggregation service
  log_shipping_token: "REPLACE_WITH_LOG_SHIPPING_TOKEN"
  
  # APM and monitoring
  datadog_api_key: "REPLACE_WITH_DATADOG_API_KEY"
  newrelic_license_key: "REPLACE_WITH_NEWRELIC_LICENSE"
  
  # Alerting webhooks
  pagerduty_integration_key: "REPLACE_WITH_PAGERDUTY_KEY"

# Security and Compliance
hx_security_secrets:
  # Vault unsealing keys (if using HashiCorp Vault)
  vault_unseal_keys:
    - "REPLACE_WITH_UNSEAL_KEY_1"
    - "REPLACE_WITH_UNSEAL_KEY_2"
    - "REPLACE_WITH_UNSEAL_KEY_3"
  
  vault_root_token: "hvs.REPLACE_WITH_ROOT_TOKEN"
  
  # LDAP/AD integration
  ldap_bind_password: "REPLACE_WITH_LDAP_BIND_PASSWORD"
  
  # Certificate authority keys
  ca_private_key: |
    -----BEGIN PRIVATE KEY-----
    REPLACE_WITH_CA_PRIVATE_KEY_CONTENT
    -----END PRIVATE KEY-----

# Environment-specific overrides
# These can be overridden in environment-specific files
hx_environment_secrets:
  # Development environment
  dev:
    debug_token: "REPLACE_WITH_DEV_DEBUG_TOKEN"
  
  # Staging environment
  staging:
    test_api_key: "REPLACE_WITH_STAGING_API_KEY"
  
  # Production environment
  production:
    # Production secrets should be extra secure
    master_key: "REPLACE_WITH_PRODUCTION_MASTER_KEY"

# Template validation - these should be replaced
# DO NOT LEAVE THESE VALUES IN PRODUCTION
_template_validation:
  template_version: "1.0"
  created_date: "2025-09-17"
  warning: "THIS IS A TEMPLATE - REPLACE ALL VALUES BEFORE USE"
  
# Security reminder
_security_reminder: |
  SECURITY CHECKLIST:
  [ ] All placeholder values replaced with actual secrets
  [ ] File encrypted with ansible-vault encrypt
  [ ] Strong, unique passwords generated
  [ ] API keys are valid and have minimal required permissions
  [ ] SSH keys are properly secured
  [ ] Backup encryption keys are stored securely
  [ ] File is added to .gitignore (vars/secrets.yml)
  [ ] Access to this file is restricted to authorized personnel only
