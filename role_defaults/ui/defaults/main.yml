---

---
# UI Services Role Defaults
# Web Interfaces and Load Balancers

# Common UI Configuration
ui_common:
  base_path: "{{ ui_base_path | default('/opt/ui') }}"
  web_root: "{{ ui_web_root | default('/var/www/html') }}"
  config_path: "{{ ui_config_path | default('/etc/ui') }}"
  logs_path: "{{ ui_logs_path | default('/var/log/ui') }}"
  user: "{{ ui_user | default('www-data') }}"
  group: "{{ ui_group | default('www-data') }}"
  uid: "{{ ui_uid | default(33) }}"
  gid: "{{ ui_gid | default(33) }}"

# Node.js Configuration
nodejs:
  version: "{{ nodejs_version | default('20') }}"
  npm_version: "{{ npm_version | default('latest') }}"
  global_packages: "{{ nodejs_global_packages | default([
    'pm2',
    'typescript',
    '@types/node',
    'eslint',
    'prettier'
  ]) }}"

# WebUI Configuration
webui:
  name: "{{ webui_name | default('HX Chat Interface') }}"
  version: "{{ webui_version | default('3.0.0') }}"
  port: "{{ webui_port | default(3000) }}"
  host: "{{ webui_host | default('0.0.0.0') }}"

  # Application Configuration
  app:
    title: "{{ webui_app_title | default('HX AI Assistant') }}"
    description: "{{ webui_app_description | default('Advanced AI Chat Interface') }}"
    favicon: "{{ webui_app_favicon | default('/assets/favicon.ico') }}"
    logo: "{{ webui_app_logo | default('/assets/logo.png') }}"
    theme: "{{ webui_app_theme | default('dark') }}"
    language: "{{ webui_app_language | default('en') }}"

  # API Configuration
  api:
    base_url: "{{ webui_api_base_url | default('http://' + groups['llm_services'][0] + ':4000') }}"
    timeout: "{{ webui_api_timeout | default(30000) }}"
    retry_attempts: "{{ webui_api_retry_attempts | default(3) }}"
    retry_delay: "{{ webui_api_retry_delay | default(1000) }}"

  # Authentication Configuration
  auth:
    enabled: "{{ webui_auth_enabled | default(true) }}"
    type: "{{ webui_auth_type | default('jwt') }}"
    secret_key: "{{ vault_jwt_secret }}"
    token_expiry: "{{ webui_auth_token_expiry | default(86400) }}"
    refresh_token_expiry: "{{ webui_auth_refresh_token_expiry | default(604800) }}"

    # OAuth Configuration
    oauth:
      enabled: "{{ webui_oauth_enabled | default(false) }}"
      providers_template:
        - name: "google"
          client_id: "{{ vault_google_oauth_client_id }}"
          client_secret: "{{ vault_google_oauth_client_secret }}"
        - name: "github"
          client_id: "{{ vault_github_oauth_client_id }}"
          client_secret: "{{ vault_github_oauth_client_secret }}"

      providers: "{{ webui_oauth_providers | default(providers_template) }}"

  # Database Configuration
  database:
    type: "{{ webui_database_type | default('postgresql') }}"
    host: "{{ webui_database_host | default(groups['databases'][0]) }}"
    port: "{{ webui_database_port | default(5432) }}"
    name: "{{ webui_database_name | default('webui') }}"
    username: "{{ vault_webui_db_user }}"
    password: "{{ vault_webui_db_password }}"
    pool_size: "{{ webui_database_pool_size | default(20) }}"
    ssl_mode: "{{ webui_database_ssl_mode | default('require') }}"

  # Redis Configuration
  redis:
    host: "{{ webui_redis_host | default(groups['cache_services'][0]) }}"
    port: "{{ webui_redis_port | default(6379) }}"
    db: "{{ webui_redis_db | default(2) }}"
    password: "{{ vault_redis_password }}"

  # Session Configuration
  session:
    store: "{{ webui_session_store | default('redis') }}"
    secret: "{{ vault_session_secret }}"
    max_age: "{{ webui_session_max_age | default(86400000) }}"
    secure: "{{ webui_session_secure | default(true) }}"
    http_only: "{{ webui_session_http_only | default(true) }}"
    same_site: "{{ webui_session_same_site | default('strict') }}"

  # File Upload Configuration
  upload:
    enabled: "{{ webui_upload_enabled | default(true) }}"
    max_file_size: "{{ webui_upload_max_file_size | default('10MB') }}"
    allowed_types: "{{ webui_upload_allowed_types | default([
      'image/jpeg',
      'image/png',
      'image/gif',
      'text/plain',
      'application/pdf'
    ]) }}"
    storage_path: "{{ webui_upload_storage_path | default('/data/uploads') }}"

  # Chat Configuration
  chat:
    max_message_length: "{{ webui_chat_max_message_length | default(4000) }}"
    max_conversation_length: "{{ webui_chat_max_conversation_length | default(100) }}"
    auto_save: "{{ webui_chat_auto_save | default(true) }}"
    typing_indicator: "{{ webui_chat_typing_indicator | default(true) }}"
    read_receipts: "{{ webui_chat_read_receipts | default(true) }}"

    # Model Selection Template
    default_model: "{{ webui_chat_default_model | default('gpt-4') }}"
    available_models_template:
      - name: "gpt-4"
        display_name: "{{ webui_chat_gpt4_display_name | default('GPT-4') }}"
        description: "{{ webui_chat_gpt4_description | default('Most capable model') }}"
        max_tokens: "{{ webui_chat_gpt4_max_tokens | default(4096) }}"
      - name: "gpt-3.5-turbo"
        display_name: "{{ webui_chat_gpt35_display_name | default('GPT-3.5 Turbo') }}"
        description: "{{ webui_chat_gpt35_description | default('Fast and efficient') }}"
        max_tokens: "{{ webui_chat_gpt35_max_tokens | default(4096) }}"
      - name: "claude-3"
        display_name: "{{ webui_chat_claude3_display_name | default('Claude 3') }}"
        description: "{{ webui_chat_claude3_description | default('Anthropic\\'s latest model') }}"
        max_tokens: "{{ webui_chat_claude3_max_tokens | default(4096) }}"

    available_models: "{{ webui_chat_available_models | default(available_models_template) }}"

  # UI Features
  features:
    dark_mode: "{{ webui_features_dark_mode | default(true) }}"
    syntax_highlighting: "{{ webui_features_syntax_highlighting | default(true) }}"
    markdown_support: "{{ webui_features_markdown_support | default(true) }}"
    code_execution: "{{ webui_features_code_execution | default(false) }}"
    file_sharing: "{{ webui_features_file_sharing | default(true) }}"
    conversation_export: "{{ webui_features_conversation_export | default(true) }}"
    search_history: "{{ webui_features_search_history | default(true) }}"

  # Performance Configuration
  performance:
    enable_compression: "{{ webui_performance_enable_compression | default(true) }}"
    cache_static_assets: "{{ webui_performance_cache_static_assets | default(true) }}"
    minify_assets: "{{ webui_performance_minify_assets | default(true) }}"
    lazy_loading: "{{ webui_performance_lazy_loading | default(true) }}"
    virtual_scrolling: "{{ webui_performance_virtual_scrolling | default(true) }}"

  # Logging Configuration
  logging:
    level: "{{ webui_logging_level | default('info') }}"
    format: "{{ webui_logging_format | default('combined') }}"
    file: "{{ webui_logging_file | default('/var/log/ui/webui.log') }}"
    max_size: "{{ webui_logging_max_size | default('100MB') }}"
    max_files: "{{ webui_logging_max_files | default(5) }}"

  # Health Check Configuration
  health_check:
    endpoint: "{{ webui_health_check_endpoint | default('/health') }}"
    interval: "{{ webui_health_check_interval | default(30) }}"
    timeout: "{{ webui_health_check_timeout | default(10) }}"

# Nginx Configuration
nginx:
  version: "{{ nginx_version | default('latest') }}"
  user: "{{ nginx_user | default('www-data') }}"
  worker_processes: "{{ nginx_worker_processes | default('auto') }}"
  worker_connections: "{{ nginx_worker_connections | default(1024) }}"

  # Main Configuration
  main:
    error_log: "{{ nginx_error_log | default('/var/log/nginx/error.log') }}"
    access_log: "{{ nginx_access_log | default('/var/log/nginx/access.log') }}"
    pid: "{{ nginx_pid | default('/var/run/nginx.pid') }}"

  # HTTP Configuration
  http:
    sendfile: "{{ nginx_sendfile | default(true) }}"
    tcp_nopush: "{{ nginx_tcp_nopush | default(true) }}"
    tcp_nodelay: "{{ nginx_tcp_nodelay | default(true) }}"
    keepalive_timeout: "{{ nginx_keepalive_timeout | default(65) }}"
    types_hash_max_size: "{{ nginx_types_hash_max_size | default(2048) }}"
    server_tokens: "{{ nginx_server_tokens | default(false) }}"

    # Client Configuration
    client_max_body_size: "{{ nginx_client_max_body_size | default('100M') }}"
    client_body_timeout: "{{ nginx_client_body_timeout | default(60) }}"
    client_header_timeout: "{{ nginx_client_header_timeout | default(60) }}"

    # Gzip Configuration
    gzip: "{{ nginx_gzip | default(true) }}"
    gzip_vary: "{{ nginx_gzip_vary | default(true) }}"
    gzip_proxied: "{{ nginx_gzip_proxied | default('any') }}"
    gzip_comp_level: "{{ nginx_gzip_comp_level | default(6) }}"
    gzip_types: "{{ nginx_gzip_types | default([
      'text/plain',
      'text/css',
      'text/xml',
      'text/javascript',
      'application/javascript',
      'application/xml+rss',
      'application/json',
      'image/svg+xml'
    ]) }}"

    # SSL Configuration
    ssl_protocols: "{{ nginx_ssl_protocols | default(['TLSv1.2', 'TLSv1.3']) }}"
    ssl_ciphers: "{{ nginx_ssl_ciphers | default('ECDHE+AESGCM:ECDHE+CHACHA20:DHE+AESGCM:DHE+CHACHA20:!aNULL:!MD5:!DSS') }}"
    ssl_prefer_server_ciphers: "{{ nginx_ssl_prefer_server_ciphers | default(true) }}"
    ssl_session_cache: "{{ nginx_ssl_session_cache | default('shared:SSL:10m') }}"
    ssl_session_timeout: "{{ nginx_ssl_session_timeout | default('10m') }}"
    ssl_stapling: "{{ nginx_ssl_stapling | default(true) }}"
    ssl_stapling_verify: "{{ nginx_ssl_stapling_verify | default(true) }}"

    # Security Headers Template
    security_headers_template:
      x_frame_options: "{{ nginx_x_frame_options | default('DENY') }}"
      x_content_type_options: "{{ nginx_x_content_type_options | default('nosniff') }}"
      x_xss_protection: "{{ nginx_x_xss_protection | default('1; mode=block') }}"
      referrer_policy: "{{ nginx_referrer_policy | default('strict-origin-when-cross-origin') }}"
      content_security_policy: "{{ nginx_content_security_policy | default('default-src \\'self\\'; script-src \\'self\\' \\'unsafe-inline\\'; style-src \\'self\\' \\'unsafe-inline\\'; img-src \\'self\\' data: https:; font-src \\'self\\' data:; connect-src \\'self\\' ws: wss:;') }}"
      strict_transport_security: "{{ nginx_strict_transport_security | default('max-age=31536000; includeSubDomains; preload') }}"

    security_headers: "{{ nginx_security_headers | default(security_headers_template) }}"

  # Rate Limiting
  rate_limiting:
    enabled: "{{ nginx_rate_limiting_enabled | default(true) }}"
    zone_name: "{{ nginx_rate_limiting_zone_name | default('api') }}"
    zone_size: "{{ nginx_rate_limiting_zone_size | default('10m') }}"
    rate: "{{ nginx_rate_limiting_rate | default('10r/s') }}"
    burst: "{{ nginx_rate_limiting_burst | default(20) }}"
    nodelay: "{{ nginx_rate_limiting_nodelay | default(true) }}"

  # Upstream Configuration Template
  upstreams_template:
    - name: "webui_backend"
      servers:
        - "{{ groups['web_interfaces'][0] }}:3000"
        - "{{ groups['web_interfaces'][1] }}:3000 backup"
      method: "{{ nginx_webui_backend_method | default('least_conn') }}"
      keepalive: "{{ nginx_webui_backend_keepalive | default(32) }}"

    - name: "api_backend"
      servers:
        - "{{ groups['llm_services'][0] }}:4000"
        - "{{ groups['llm_services'][1] }}:4000 backup"
      method: "{{ nginx_api_backend_method | default('round_robin') }}"
      keepalive: "{{ nginx_api_backend_keepalive | default(32) }}"

  upstreams: "{{ nginx_upstreams | default(upstreams_template) }}"

# Load Balancer Configuration
load_balancer:
  # Keepalived Configuration
  keepalived:
    router_id: "{{ keepalived_router_id | default('HX_LB') }}"
    interface: "{{ keepalived_interface | default('eth0') }}"
    virtual_router_id: "{{ keepalived_virtual_router_id | default(51) }}"
    priority: "{{ keepalived_priority | default(100) }}"
    advert_int: "{{ keepalived_advert_int | default(1) }}"
    auth_type: "{{ keepalived_auth_type | default('PASS') }}"
    auth_pass: "{{ vault_keepalived_password }}"

    # Virtual IP Configuration
    virtual_ips_template:
      - ip: "{{ vip_address }}"
        interface: "{{ keepalived_vip_interface | default('eth0') }}"

    virtual_ips: "{{ keepalived_virtual_ips | default(virtual_ips_template) }}"

    # Health Check Scripts Template
    vrrp_scripts_template:
      - name: "chk_nginx"
        script: "{{ keepalived_nginx_check_script | default('/usr/local/bin/check_nginx.sh') }}"
        interval: "{{ keepalived_nginx_check_interval | default(2) }}"
        weight: "{{ keepalived_nginx_check_weight | default(-2) }}"
        fall: "{{ keepalived_nginx_check_fall | default(3) }}"
        rise: "{{ keepalived_nginx_check_rise | default(2) }}"

    vrrp_scripts: "{{ keepalived_vrrp_scripts | default(vrrp_scripts_template) }}"

  # HAProxy Configuration (alternative to nginx)
  haproxy:
    enabled: "{{ haproxy_enabled | default(false) }}"
    stats:
      enabled: "{{ haproxy_stats_enabled | default(true) }}"
      uri: "{{ haproxy_stats_uri | default('/stats') }}"
      username: "{{ haproxy_stats_username | default('admin') }}"
      password: "{{ vault_haproxy_stats_password }}"

    # Global Configuration
    global:
      maxconn: "{{ haproxy_global_maxconn | default(4096) }}"
      log: "{{ haproxy_global_log | default('127.0.0.1:514 local0') }}"
      chroot: "{{ haproxy_global_chroot | default('/var/lib/haproxy') }}"
      stats_socket: "{{ haproxy_global_stats_socket | default('/run/haproxy/admin.sock mode 660 level admin') }}"
      stats_timeout: "{{ haproxy_global_stats_timeout | default('30s') }}"
      user: "{{ haproxy_global_user | default('haproxy') }}"
      group: "{{ haproxy_global_group | default('haproxy') }}"
      daemon: "{{ haproxy_global_daemon | default(true) }}"

    # Default Configuration
    defaults:
      mode: "{{ haproxy_defaults_mode | default('http') }}"
      log: "{{ haproxy_defaults_log | default('global') }}"
      option: "{{ haproxy_defaults_option | default('httplog') }}"
      option_dontlognull: "{{ haproxy_defaults_option_dontlognull | default(true) }}"
      option_redispatch: "{{ haproxy_defaults_option_redispatch | default(true) }}"
      retries: "{{ haproxy_defaults_retries | default(3) }}"
      timeout_connect: "{{ haproxy_defaults_timeout_connect | default('5000ms') }}"
      timeout_client: "{{ haproxy_defaults_timeout_client | default('50000ms') }}"
      timeout_server: "{{ haproxy_defaults_timeout_server | default('50000ms') }}"
      errorfile_400: "{{ haproxy_defaults_errorfile_400 | default('/etc/haproxy/errors/400.http') }}"
      errorfile_403: "{{ haproxy_defaults_errorfile_403 | default('/etc/haproxy/errors/403.http') }}"
      errorfile_408: "{{ haproxy_defaults_errorfile_408 | default('/etc/haproxy/errors/408.http') }}"
      errorfile_500: "{{ haproxy_defaults_errorfile_500 | default('/etc/haproxy/errors/500.http') }}"
      errorfile_502: "{{ haproxy_defaults_errorfile_502 | default('/etc/haproxy/errors/502.http') }}"
      errorfile_503: "{{ haproxy_defaults_errorfile_503 | default('/etc/haproxy/errors/503.http') }}"
      errorfile_504: "{{ haproxy_defaults_errorfile_504 | default('/etc/haproxy/errors/504.http') }}"

# SSL Certificate Configuration
ssl_certificates:
  # Let's Encrypt Configuration
  letsencrypt:
    enabled: "{{ ssl_letsencrypt_enabled | default(true) }}"
    email: "{{ ssl_letsencrypt_email | default(admin_email) }}"
    domains: "{{ ssl_letsencrypt_domains | default([domain_name, 'www.' + domain_name, 'api.' + domain_name]) }}"
    challenge_type: "{{ ssl_letsencrypt_challenge_type | default('http-01') }}"

  # Self-signed Certificate (for development)
  self_signed:
    enabled: "{{ ssl_self_signed_enabled | default(environment == 'development') }}"
    country: "{{ ssl_self_signed_country | default('US') }}"
    state: "{{ ssl_self_signed_state | default('California') }}"
    city: "{{ ssl_self_signed_city | default('San Francisco') }}"
    organization: "{{ ssl_self_signed_organization | default(organization) }}"
    organizational_unit: "{{ ssl_self_signed_organizational_unit | default('IT Department') }}"
    common_name: "{{ ssl_self_signed_common_name | default(domain_name) }}"

# Monitoring Configuration
monitoring:
  # Nginx Monitoring
  nginx_status:
    enabled: "{{ ui_monitoring_nginx_status_enabled | default(true) }}"
    location: "{{ ui_monitoring_nginx_status_location | default('/nginx_status') }}"
    allow_ips: "{{ ui_monitoring_nginx_status_allow_ips | default(['127.0.0.1', network_subnet]) }}"

  # Custom Metrics Template
  custom_metrics_template:
    - name: "http_requests_total"
      type: "counter"
      description: "Total HTTP requests"
    - name: "http_request_duration"
      type: "histogram"
      description: "HTTP request duration"
    - name: "active_connections"
      type: "gauge"
      description: "Active connections"
    - name: "upstream_response_time"
      type: "histogram"
      description: "Upstream response time"

  custom_metrics: "{{ ui_monitoring_custom_metrics | default(custom_metrics_template) }}"

# Backup Configuration
backup:
  web_content:
    enabled: "{{ ui_backup_web_content_enabled | default(true) }}"
    schedule: "{{ ui_backup_web_content_schedule | default('0 3 * * *') }}"
    retention_days: "{{ ui_backup_web_content_retention_days | default(30) }}"

  configurations:
    enabled: "{{ ui_backup_configurations_enabled | default(true) }}"
    schedule: "{{ ui_backup_configurations_schedule | default('0 2 * * *') }}"
    retention_days: "{{ ui_backup_configurations_retention_days | default(90) }}"

  ssl_certificates:
    enabled: "{{ ui_backup_ssl_certificates_enabled | default(true) }}"
    schedule: "{{ ui_backup_ssl_certificates_schedule | default('0 1 * * 0') }}"
    retention_weeks: "{{ ui_backup_ssl_certificates_retention_weeks | default(12) }}"

# Security Configuration
security:
  # Web Application Firewall
  waf:
    enabled: "{{ ui_security_waf_enabled | default(true) }}"
    mode: "{{ ui_security_waf_mode | default('block') }}"
    rules: "{{ ui_security_waf_rules | default([
      'REQUEST-901-INITIALIZATION',
      'REQUEST-903-IP-REPUTATION',
      'REQUEST-905-COMMON-EXCEPTIONS',
      'REQUEST-911-METHOD-ENFORCEMENT',
      'REQUEST-913-SCANNER-DETECTION',
      'REQUEST-920-PROTOCOL-ENFORCEMENT',
      'REQUEST-921-PROTOCOL-ATTACK',
      'REQUEST-930-APPLICATION-ATTACK-LFI',
      'REQUEST-931-APPLICATION-ATTACK-RFI',
      'REQUEST-932-APPLICATION-ATTACK-RCE',
      'REQUEST-933-APPLICATION-ATTACK-PHP',
      'REQUEST-941-APPLICATION-ATTACK-XSS',
      'REQUEST-942-APPLICATION-ATTACK-SQLI',
      'REQUEST-943-APPLICATION-ATTACK-SESSION-FIXATION',
      'REQUEST-949-BLOCKING-EVALUATION',
      'RESPONSE-950-DATA-LEAKAGES',
      'RESPONSE-951-DATA-LEAKAGES-SQL',
      'RESPONSE-952-DATA-LEAKAGES-JAVA',
      'RESPONSE-953-DATA-LEAKAGES-PHP',
      'RESPONSE-954-DATA-LEAKAGES-IIS',
      'RESPONSE-959-BLOCKING-EVALUATION',
      'RESPONSE-980-CORRELATION'
    ]) }}"

  # DDoS Protection
  ddos_protection:
    enabled: "{{ ui_security_ddos_protection_enabled | default(true) }}"
    rate_limit: "{{ ui_security_ddos_protection_rate_limit | default('100r/s') }}"
    burst: "{{ ui_security_ddos_protection_burst | default(200) }}"
    connection_limit: "{{ ui_security_ddos_protection_connection_limit | default(50) }}"

  # Bot Protection
  bot_protection:
    enabled: "{{ ui_security_bot_protection_enabled | default(true) }}"
    challenge_mode: "{{ ui_security_bot_protection_challenge_mode | default('js') }}"
    whitelist_ips: "{{ ui_security_bot_protection_whitelist_ips | default([]) }}"
    blacklist_ips: "{{ ui_security_bot_protection_blacklist_ips | default([]) }}"

# Environment-specific Configuration Overrides
ui_environment_config:
  development:
    debug_mode: "{{ ui_debug_mode | default(true) }}"
    ssl_verification: "{{ ui_dev_ssl_verification | default(false) }}"
    cache_enabled: "{{ ui_dev_cache_enabled | default(false) }}"
    minification: "{{ ui_dev_minification | default(false) }}"

  test:
    debug_mode: "{{ ui_debug_mode | default(true) }}"
    ssl_verification: "{{ ui_test_ssl_verification | default(false) }}"
    cache_enabled: "{{ ui_test_cache_enabled | default(true) }}"
    minification: "{{ ui_test_minification | default(false) }}"
    load_testing: "{{ ui_test_load_testing | default(true) }}"

  production:
    debug_mode: "{{ ui_debug_mode | default(false) }}"
    ssl_verification: "{{ ui_prod_ssl_verification | default(true) }}"
    cache_enabled: "{{ ui_prod_cache_enabled | default(true) }}"
    minification: "{{ ui_prod_minification | default(true) }}"
    performance_monitoring: "{{ ui_prod_performance_monitoring | default(true) }}"
    security_hardening: "{{ ui_prod_security_hardening | default(true) }}"
