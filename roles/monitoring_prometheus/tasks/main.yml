---

---
- name: Create prometheus system user
  user:
    name: prometheus
    system: true
    shell: /bin/false
    home: /var/lib/prometheus
    createhome: false

- name: Create prometheus directories
  file:
    path: "{{ item }}"
    state: directory
    owner: prometheus
    group: prometheus
    mode: '0755'
  loop:
    - /etc/prometheus
    - /var/lib/prometheus
    - /var/lib/prometheus/data

- name: Download and extract prometheus
  unarchive:
    src: "https://github.com/prometheus/prometheus/releases/download/v{{ prometheus_version }}/prometheus-{{ prometheus_version }}.linux-amd64.tar.gz"
    dest: /tmp
    remote_src: true
    creates: "/tmp/prometheus-{{ prometheus_version }}.linux-amd64"

- name: Copy prometheus binaries
  copy:
    src: "/tmp/prometheus-{{ prometheus_version }}.linux-amd64/{{ item }}"
    dest: "/usr/local/bin/{{ item }}"
    owner: root
    group: root
    mode: '0755'
    remote_src: true
  loop:
    - prometheus
    - promtool
  notify: restart prometheus

- name: Copy prometheus console files
  copy:
    src: "/tmp/prometheus-{{ prometheus_version }}.linux-amd64/{{ item }}"
    dest: "/etc/prometheus/{{ item }}"
    owner: prometheus
    group: prometheus
    mode: '0644'
    remote_src: true
  loop:
    - consoles
    - console_libraries

- name: Create prometheus configuration
  template:
    src: prometheus.yml.j2
    dest: /etc/prometheus/prometheus.yml
    owner: prometheus
    group: prometheus
    mode: '0644'
  notify: restart prometheus

- name: Create prometheus systemd service
  template:
    src: prometheus.service.j2
    dest: /etc/systemd/system/prometheus.service
    owner: root
    group: root
    mode: '0644'
  notify:
    - reload systemd
    - restart prometheus

- name: Start and enable prometheus service
  systemd:
    name: prometheus
    state: started
    enabled: true
    daemon_reload: true

- name: Configure firewall for prometheus
  ufw:
    rule: allow
    port: "{{ prometheus_port }}"
    proto: tcp
  when: configure_firewall | default(true)

- name: Verify prometheus is running
  uri:
    url: "http://localhost:{{ prometheus_port }}/-/healthy"
    method: GET
    status_code: 200
  retries: 5
  delay: 10

