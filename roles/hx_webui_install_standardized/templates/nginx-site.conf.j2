
# Nginx configuration for {{ hx_webui_server_name }}
# Generated by Ansible - HX Web UI Install Standardized Role
# {{ ansible_managed }}

# Rate limiting zone
{% if hx_webui_rate_limiting_enabled %}
limit_req_zone $binary_remote_addr zone={{ hx_webui_server_name }}_limit:10m rate={{ hx_webui_rate_limit }};
{% endif %}

# Upstream configuration (if needed)
# upstream {{ hx_webui_app_name }}_backend {
#     server 127.0.0.1:8000;
#     keepalive 32;
# }

{% if hx_webui_ssl_enabled %}
# HTTP to HTTPS redirect
server {
    listen {{ hx_webui_listen_port }};
    server_name {{ hx_webui_server_name }};
    
    # Security headers
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    
    # Redirect all HTTP traffic to HTTPS
    return 301 https://$server_name$request_uri;
}
{% endif %}

# Main server block
server {
{% if hx_webui_ssl_enabled %}
    listen {{ hx_webui_ssl_port }} ssl http2;
{% else %}
    listen {{ hx_webui_listen_port }};
{% endif %}
    server_name {{ hx_webui_server_name }};
    
    root {{ hx_webui_root_dir }};
    index {{ hx_webui_index_files | join(' ') }};
    
    # Logging
    access_log {{ hx_webui_access_log }} combined;
    error_log {{ hx_webui_error_log }} {{ hx_webui_log_level }};
    
{% if hx_webui_ssl_enabled %}
    # SSL Configuration
    ssl_certificate {{ hx_webui_ssl_cert_file }};
    ssl_certificate_key {{ hx_webui_ssl_key_file }};
    ssl_protocols {{ hx_webui_ssl_protocols }};
    ssl_ciphers {{ hx_webui_ssl_ciphers }};
    ssl_prefer_server_ciphers {{ hx_webui_ssl_prefer_server_ciphers | lower }};
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # OCSP Stapling
    ssl_stapling on;
    ssl_stapling_verify on;
{% endif %}
    
    # Security headers
{% for header in hx_webui_security_headers %}
    add_header {{ header.name }} "{{ header.value }}" always;
{% endfor %}
    
    # Hide server tokens
    server_tokens off;
    
{% if hx_webui_rate_limiting_enabled %}
    # Rate limiting
    limit_req zone={{ hx_webui_server_name }}_limit burst={{ hx_webui_rate_limit_burst }} nodelay;
{% endif %}
    
    # Main location
    location / {
        try_files $uri $uri/ =404;
        
        # Cache control for HTML files
        location ~* \.(html|htm)$ {
            expires 1h;
            add_header Cache-Control "public, must-revalidate";
        }
    }
    
{% for static_dir in hx_webui_static_dirs %}
    # Static files: {{ static_dir.path }}
    location {{ static_dir.path }} {
        alias {{ static_dir.location }};
        expires {{ static_dir.expires }};
        add_header Cache-Control "public, immutable";
        
        # Optimize static file serving
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        
        # Security for static files
        location ~* \.(php|pl|py|jsp|asp|sh|cgi)$ {
            deny all;
        }
    }
    
{% endfor %}
{% if hx_webui_health_check_enabled %}
    # Health check endpoint
    location {{ hx_webui_health_check_path }} {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
{% endif %}
    
{% if hx_webui_monitoring_enabled %}
    # Metrics endpoint
    location {{ hx_webui_metrics_path }} {
        stub_status on;
        access_log off;
        allow 127.0.0.1;
        deny all;
    }
{% endif %}
    
    # Security configurations
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~ ~$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Prevent access to sensitive files
    location ~* \.(conf|log|sql|bak|backup|tar|gz|zip)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
}
