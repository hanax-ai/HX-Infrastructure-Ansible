
#!/bin/bash
# PostgreSQL Connection Test Script
# Generated by Ansible - DO NOT EDIT MANUALLY

set -euo pipefail

# Configuration
PG_HOST="{{ database_backup.databases.postgresql.host }}"
PG_PORT="{{ database_backup.databases.postgresql.port }}"
PG_USER="${PGUSER:-postgres}"
LOG_FILE="{{ backup_automation.log_directory }}/postgresql-connection-test.log"

# Logging function
log() {
    local level="$1"
    local message="$2"
    echo "$(date '+%Y-%m-%d %H:%M:%S') [$level] $message" | tee -a "$LOG_FILE"
}

# Create log directory
mkdir -p "$(dirname "$LOG_FILE")"

log "INFO" "Testing PostgreSQL connection to $PG_HOST:$PG_PORT"

# Check if credentials are available
if [[ -z "${PGPASSWORD:-}" && -z "${PGPASSFILE:-}" ]]; then
    log "WARN" "Neither PGPASSWORD nor PGPASSFILE is set; relying on peer/trust auth."
fi

# Test basic connection
if ! PGPASSWORD="$PGPASSWORD" psql -h "$PG_HOST" -p "$PG_PORT" -U "$PG_USER" -d postgres -c "SELECT version();" > /dev/null 2>&1; then
    log "ERROR" "Cannot connect to PostgreSQL server"
    exit 1
fi

log "INFO" "PostgreSQL connection successful"

# Test database access for each configured database
{% for db in database_backup.databases.postgresql.databases %}
log "INFO" "Testing access to database: {{ db }}"
if ! PGPASSWORD="$PGPASSWORD" psql -h "$PG_HOST" -p "$PG_PORT" -U "$PG_USER" -d "{{ db }}" -c "SELECT 1;" > /dev/null 2>&1; then
    log "ERROR" "Cannot access database: {{ db }}"
    exit 1
fi
log "INFO" "Database {{ db }} access successful"
{% endfor %}

# Test pg_dump availability
if ! command -v pg_dump >/dev/null 2>&1; then
    log "ERROR" "pg_dump command not found"
    exit 1
fi

log "INFO" "pg_dump command available"

# Test backup permissions
BACKUP_DIR="{{ backup_automation.base_directory }}/database/postgresql"
if [[ ! -d "$BACKUP_DIR" ]]; then
    log "ERROR" "Backup directory does not exist: $BACKUP_DIR"
    exit 1
fi

if [[ ! -w "$BACKUP_DIR" ]]; then
    log "ERROR" "Backup directory is not writable: $BACKUP_DIR"
    exit 1
fi

log "INFO" "Backup directory permissions OK"

log "INFO" "All PostgreSQL connection tests passed"
