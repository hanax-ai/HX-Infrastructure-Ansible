#!/bin/bash
umask 0077

#!/bin/bash
# Redis Connection Test Script
# Generated by Ansible - DO NOT EDIT MANUALLY

set -euo pipefail

# Configuration
REDIS_HOST="{{ database_backup.databases.redis.host }}"
REDIS_PORT="{{ database_backup.databases.redis.port }}"
LOG_FILE="{{ backup_automation.log_directory }}/redis-connection-test.log"

# Logging function
log() {
    local level="$1"
    local message="$2"
    echo "$(date '+%Y-%m-%d %H:%M:%S') [$level] $message" | tee -a "$LOG_FILE"
}

# Create log directory
mkdir -p "$(dirname "$LOG_FILE")"

log "INFO" "Testing Redis connection to $REDIS_HOST:$REDIS_PORT"

# Test basic connection
if ! redis-cli -h "$REDIS_HOST" -p "$REDIS_PORT" ping > /dev/null 2>&1; then
    log "ERROR" "Cannot connect to Redis server"
    exit 1
fi

log "INFO" "Redis connection successful"

# Test Redis commands
log "INFO" "Testing Redis INFO command"
if ! redis-cli -h "$REDIS_HOST" -p "$REDIS_PORT" INFO server > /dev/null 2>&1; then
    log "ERROR" "Cannot execute INFO command on Redis server"
    exit 1
fi

log "INFO" "Redis INFO command successful"

# Test Redis configuration access
log "INFO" "Testing Redis CONFIG access"
if ! redis-cli -h "$REDIS_HOST" -p "$REDIS_PORT" CONFIG GET dir > /dev/null 2>&1; then
    log "ERROR" "Cannot access Redis configuration"
    exit 1
fi

log "INFO" "Redis CONFIG access successful"

# Test redis-cli availability
if ! command -v redis-cli >/dev/null 2>&1; then
    log "ERROR" "redis-cli command not found"
    exit 1
fi

log "INFO" "redis-cli command available"

# Test backup directory permissions
BACKUP_DIR="{{ backup_automation.base_directory }}/database/redis"
if [[ ! -d "$BACKUP_DIR" ]]; then
    log "ERROR" "Backup directory does not exist: $BACKUP_DIR"
    exit 1
fi

if [[ ! -w "$BACKUP_DIR" ]]; then
    log "ERROR" "Backup directory is not writable: $BACKUP_DIR"
    exit 1
fi

log "INFO" "Backup directory permissions OK"

# Get Redis data directory and check access
REDIS_DATA_DIR=$(redis-cli -h "$REDIS_HOST" -p "$REDIS_PORT" CONFIG GET dir | tail -1)
log "INFO" "Redis data directory: $REDIS_DATA_DIR"

if [[ ! -d "$REDIS_DATA_DIR" ]]; then
    log "ERROR" "Redis data directory does not exist: $REDIS_DATA_DIR"
    exit 1
fi

if [[ ! -r "$REDIS_DATA_DIR" ]]; then
    log "ERROR" "Redis data directory is not readable: $REDIS_DATA_DIR"
    exit 1
fi

log "INFO" "Redis data directory access OK"

log "INFO" "All Redis connection tests passed"
