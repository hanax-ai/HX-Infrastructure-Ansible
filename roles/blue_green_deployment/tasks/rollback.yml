---

---
# Rollback Tasks
- name: Stop failed deployment
  ansible.builtin.systemd:
    name: "{{ application_name }}-{{ new_deploy_color }}"
    state: stopped
  ignore_errors: true

- name: Restore previous configuration
  ansible.builtin.copy:
    src: "/opt/backups/{{ deployment_timestamp }}/config/"
    dest: "/opt/{{ application_name }}/config/"
    remote_src: true
  when: deployment_timestamp is defined

- name: Ensure current environment is running
  ansible.builtin.systemd:
    name: "{{ application_name }}-{{ current_deploy_color }}"
    state: started
    enabled: true

- name: Verify rollback health
  ansible.builtin.uri:
    url: "http://{{ ansible_default_ipv4.address }}:{{ app_port | default(8080) }}/health"
    method: GET
    status_code: 200
  register: rollback_health_check

- name: Log rollback event
  ansible.builtin.lineinfile:
    path: /var/log/deployments.log
    line: "{{ ansible_date_time.iso8601 }} - ROLLBACK: Failed deployment to {{ new_environment }}, reverted to {{ current_environment }}"
    create: true

- name: Send rollback notification
  ansible.builtin.mail:
    to: "{{ notification_email | default('ops@company.com') }}"
    subject: "Deployment Rollback - {{ application_name }}"
    body: |
      Deployment to {{ new_environment }} failed and was rolled back.
      Current active environment: {{ current_environment }}
      Timestamp: {{ ansible_date_time.iso8601 }}
  when: falsetification_email is defined
