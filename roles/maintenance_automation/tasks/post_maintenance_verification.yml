---
# Post-maintenance verification
- name: Wait for system stabilization
  wait_for:
    timeout: 60
  delegate_to: localhost

- name: Verify critical services are running
  systemd:
    name: "{{ item }}"
  register: service_verification
  loop: "{{ critical_services | default(['nginx', 'postgresql', 'docker', 'ssh']) }}"

- name: Check service health endpoints
  uri:
    url: "{{ item }}"
    method: GET
    timeout: 30
  register: endpoint_verification
  failed_when: false
  loop: "{{ health_endpoints | default(['http://localhost/health']) }}"

- name: Verify system resources post-maintenance
  include_role:
    name: health_monitoring
    tasks_from: system_health_check

- name: Check disk space after maintenance
  shell: |
    df -h / | tail -1 | awk '{print $5}' | sed 's/%//'
  register: post_maintenance_disk_usage
  changed_when: false

- name: Verify database connectivity
  postgresql_ping:
    db: "{{ database_name | default('hx_infrastructure') }}"
    login_host: "{{ database_host | default('localhost') }}"
    login_user: "{{ database_user | default('postgres') }}"
    login_password: "{{ database_password }}"
  register: db_connectivity_check
  when: verify_database | default(true)

- name: Check application logs for errors
  shell: |
    # Check for errors in the last 10 minutes
    since_time=$(date -d '10 minutes ago' '+%Y-%m-%d %H:%M:%S')
    if [ -f /var/log/hx-infrastructure/application.log ]; then
      awk -v since="$since_time" '$0 >= since && /ERROR|CRITICAL|FATAL/' /var/log/hx-infrastructure/application.log | wc -l
    else
      echo 0
    fi
  register: post_maintenance_errors
  changed_when: false

- name: Verify network connectivity
  shell: |
    ping -c 3 8.8.8.8 >/dev/null 2>&1 && echo "ok" || echo "failed"
  register: network_connectivity_check
  changed_when: false

- name: Create post-maintenance verification report
  set_fact:
    verification_report:
      timestamp: "{{ ansible_date_time.iso8601 }}"
      hostname: "{{ inventory_hostname }}"
      services:
        total_checked: "{{ service_verification.results | length }}"
        running: "{{ service_verification.results | selectattr('status.ActiveState', 'equalto', 'active') | list | length }}"
        failed: "{{ service_verification.results | rejectattr('status.ActiveState', 'equalto', 'active') | list }}"
      endpoints:
        total_checked: "{{ endpoint_verification.results | length }}"
        healthy: "{{ endpoint_verification.results | selectattr('status', 'equalto', 200) | list | length }}"
        failed: "{{ endpoint_verification.results | rejectattr('status', 'equalto', 200) | list }}"
      system:
        disk_usage_percent: "{{ post_maintenance_disk_usage.stdout | int }}"
        health_status: "{{ (system_health_status | from_json).healthy if system_health_status is defined else 'unknown' }}"
        network_connectivity: "{{ network_connectivity_check.stdout }}"
      database:
        connectivity: "{{ 'ok' if db_connectivity_check is succeeded else 'failed' }}"
      application:
        recent_errors: "{{ post_maintenance_errors.stdout | int }}"
      overall_status: "unknown"

- name: Determine overall verification status
  set_fact:
    verification_report: "{{ verification_report | combine({
      'overall_status': 'passed' if (
        verification_report.services.failed | length == 0 and
        verification_report.endpoints.failed | length == 0 and
        verification_report.system.network_connectivity == 'ok' and
        verification_report.database.connectivity == 'ok' and
        verification_report.application.recent_errors == 0
      ) else 'failed'
    }) }}"

- name: Log verification report
  copy:
    content: "{{ verification_report | to_nice_json }}"
    dest: "/var/log/hx-infrastructure/post-maintenance-verification-{{ ansible_date_time.epoch }}.json"

- name: Send verification alert if failed
  include_role:
    name: health_monitoring
    tasks_from: trigger_alert
  vars:
    alert_type: "post_maintenance_verification"
    alert_message: "Post-maintenance verification failed on {{ inventory_hostname }}"
    alert_data: "{{ verification_report }}"
    alert_severity: "critical"
  when:
    - verification_report.overall_status == 'failed'
    - alerting_enabled | default(true)

- name: Remove maintenance lock file
  file:
    path: /var/lock/hx-maintenance.lock
    state: absent

- name: Set post-maintenance verification status
  set_fact:
    post_maintenance_verified: "{{ verification_report.overall_status == 'passed' }}"
    verification_timestamp: "{{ ansible_date_time.iso8601 }}"

- name: Fail if verification failed
  fail:
    msg: "Post-maintenance verification failed. Check the verification report for details."
  when:
    - verification_report.overall_status == 'failed'
    - fail_on_verification_failure | default(true)
