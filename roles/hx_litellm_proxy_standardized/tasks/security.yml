
---
- name: "Hx | LiteLLM | Configure firewall rules"
  ufw:
    rule: allow
    port: "{{ hx_litellm_port }}"
    proto: tcp
  when: 
    - hx_litellm_firewall_enabled | default(false) | bool
    - ansible_facts['os_family'] == "Debian"
  tags: ['security']

- name: "Hx | LiteLLM | Block malicious IPs"
  ufw:
    rule: deny
    src: "{{ item }}"
  loop: "{{ hx_litellm_blocked_ips }}"
  when: 
    - hx_litellm_firewall_enabled | default(false) | bool
    - hx_litellm_blocked_ips | length > 0
  tags: ['security']

- name: "Hx | LiteLLM | Allow specific IPs only"
  ufw:
    rule: allow
    port: "{{ hx_litellm_port }}"
    src: "{{ item }}"
    proto: tcp
  loop: "{{ hx_litellm_allowed_ips }}"
  when: 
    - hx_litellm_firewall_enabled | default(false) | bool
    - hx_litellm_allowed_ips | length > 0
  tags: ['security']

- name: "Hx | LiteLLM | Set secure file permissions"
  file:
    path: "{{ item.path }}"
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode: "{{ item.mode }}"
    recurse: "{{ item.recurse | default(false) }}"
  loop:
    - path: "{{ hx_litellm_config_dir }}"
      owner: "root"
      group: "{{ hx_litellm_group }}"
      mode: "0750"
      recurse: true
    - path: "{{ hx_litellm_data_dir }}"
      owner: "{{ hx_litellm_user }}"
      group: "{{ hx_litellm_group }}"
      mode: "0750"
      recurse: true
    - path: "{{ hx_litellm_log_dir }}"
      owner: "{{ hx_litellm_user }}"
      group: "{{ hx_litellm_group }}"
      mode: "0755"
  tags: ['security']

- name: "Hx | LiteLLM | Secure API key files"
  file:
    path: "{{ hx_litellm_config_dir }}/api-keys.yaml"
    owner: "{{ hx_litellm_user }}"
    group: "{{ hx_litellm_group }}"
    mode: "0600"
  when: hx_litellm_api_keys | length > 0
  tags: ['security']

- name: "Hx | LiteLLM | Configure fail2ban for LiteLLM"
  template:
    src: litellm-fail2ban.conf.j2
    dest: "/etc/fail2ban/jail.d/litellm.conf"
    owner: root
    group: root
    mode: "0644"
  notify: restart fail2ban
  tags: ['security']

- name: "Hx | LiteLLM | Install and configure fail2ban"
  package:
    name: fail2ban
    state: present
  tags: ['security']

- name: "Hx | LiteLLM | Create security audit script"
  template:
    src: security-audit.sh.j2
    dest: "{{ hx_litellm_home }}/security-audit.sh"
    owner: "{{ hx_litellm_user }}"
    group: "{{ hx_litellm_group }}"
    mode: "0750"
  tags: ['security']

- name: "Hx | LiteLLM | Setup security audit cron job"
  cron:
    name: "LiteLLM Security Audit"
    minute: "0"
    hour: "3"
    job: "{{ hx_litellm_home }}/security-audit.sh"
    user: "{{ hx_litellm_user }}"
  tags: ['security']

- name: "Hx | LiteLLM | Configure log monitoring"
  template:
    src: log-monitor.sh.j2
    dest: "{{ hx_litellm_home }}/log-monitor.sh"
    owner: "{{ hx_litellm_user }}"
    group: "{{ hx_litellm_group }}"
    mode: "0750"
  tags: ['security']

- name: "Hx | LiteLLM | Setup log monitoring cron job"
  cron:
    name: "LiteLLM Log Monitor"
    minute: "*/15"
    job: "{{ hx_litellm_home }}/log-monitor.sh"
    user: "{{ hx_litellm_user }}"
  tags: ['security']

- name: "Hx | LiteLLM | Create API key rotation script"
  template:
    src: rotate-keys.sh.j2
    dest: "{{ hx_litellm_home }}/rotate-keys.sh"
    owner: "{{ hx_litellm_user }}"
    group: "{{ hx_litellm_group }}"
    mode: "0750"
  tags: ['security']

- name: "Hx | LiteLLM | Configure Redis security"
  lineinfile:
    path: /etc/redis/redis.conf
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    backup: true
  loop:
    - regexp: "^bind"
      line: "bind 127.0.0.1"
    - regexp: "^protected-mode"
      line: "protected-mode yes"
    - regexp: "^port"
      line: "port 0"
    - regexp: "^unixsocket"
      line: "unixsocket /var/run/redis/redis-server.sock"
    - regexp: "^unixsocketperm"
      line: "unixsocketperm 770"
  when: 
    - hx_litellm_caching_enabled | default(false) | bool
    - hx_litellm_cache_type == "redis"
  notify: restart redis
  tags: ['security']

- name: "Hx | LiteLLM | Disable dangerous Redis commands"
  lineinfile:
    path: /etc/redis/redis.conf
    line: "rename-command {{ item }} \"\""
    backup: true
  loop:
    - "FLUSHDB"
    - "FLUSHALL"
    - "KEYS"
    - "CONFIG"
    - "SHUTDOWN"
    - "DEBUG"
    - "EVAL"
  when: 
    - hx_litellm_caching_enabled | default(false) | bool
    - hx_litellm_cache_type == "redis"
  notify: restart redis
  tags: ['security']
