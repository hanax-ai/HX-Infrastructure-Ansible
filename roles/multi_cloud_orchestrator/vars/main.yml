---
# Multi-Cloud Orchestrator Configuration
multi_cloud:
  enabled: true

  cloud_providers:
    aws:
      enabled: true
      regions:
        - us-east-1
        - us-west-2
        - eu-west-1
      credentials:
        access_key: "{{ aws_access_key | default('') }}"
        secret_key: "{{ aws_secret_key | default('') }}"
      services:
        - ec2
        - rds
        - s3
        - lambda
        - ecs

    azure:
      enabled: true
      regions:
        - eastus
        - westus2
        - westeurope
      credentials:
        client_id: "{{ azure_client_id | default('') }}"
        client_secret: "{{ azure_client_secret | default('') }}"
        tenant_id: "{{ azure_tenant_id | default('') }}"
      services:
        - virtual_machines
        - sql_database
        - storage_account
        - functions
        - container_instances

    gcp:
      enabled: true
      regions:
        - us-central1
        - us-west1
        - europe-west1
      credentials:
        service_account_key: "{{ gcp_service_account_key | default('') }}"
      services:
        - compute_engine
        - cloud_sql
        - cloud_storage
        - cloud_functions
        - cloud_run

  workload_placement:
    enabled: true
    strategies:
      - name: "cost_optimized"
        weight: 0.4
        factors:
          - cost_per_hour
          - data_transfer_cost
          - storage_cost
      - name: "performance_optimized"
        weight: 0.3
        factors:
          - cpu_performance
          - network_latency
          - io_performance
      - name: "availability_optimized"
        weight: 0.3
        factors:
          - sla_guarantee
          - redundancy_level
          - disaster_recovery

    placement_rules:
      - workload_type: "database"
        preferred_clouds: ["aws", "azure"]
        anti_affinity: true
      - workload_type: "compute"
        preferred_clouds: ["gcp", "aws"]
        scaling_priority: "horizontal"
      - workload_type: "storage"
        preferred_clouds: ["aws", "gcp"]
        replication_factor: 3

  disaster_recovery:
    enabled: true
    strategies:
      - name: "active_passive"
        primary_cloud: "aws"
        secondary_cloud: "azure"
        rpo: 300  # 5 minutes
        rto: 900  # 15 minutes
      - name: "active_active"
        clouds: ["aws", "gcp"]
        load_distribution: [0.6, 0.4]
        sync_interval: 60

    backup_policies:
      - name: "critical_data"
        frequency: "hourly"
        retention: 30  # days
        cross_cloud: true
      - name: "application_data"
        frequency: "daily"
        retention: 7  # days
        cross_cloud: false

  cost_optimization:
    enabled: true
    strategies:
      - name: "spot_instance_usage"
        target_percentage: 70
        fallback_strategy: "on_demand"
      - name: "reserved_instance_optimization"
        utilization_threshold: 80
        commitment_period: 12  # months
      - name: "right_sizing"
        analysis_period: 7  # days
        utilization_threshold: 30

    budget_controls:
      daily_limit: 2000
      monthly_limit: 50000
      alert_thresholds: [50, 80, 95]  # percentage
      auto_shutdown: false

  compliance:
    enabled: true
    frameworks:
      - name: "gdpr"
        regions: ["eu-west-1", "westeurope", "europe-west1"]
        data_residency: true
      - name: "hipaa"
        encryption_required: true
        audit_logging: true
      - name: "sox"
        change_approval: true
        segregation_of_duties: true

    security_policies:
      - name: "encryption_at_rest"
        mandatory: true
        key_management: "cloud_native"
      - name: "network_isolation"
        vpc_required: true
        private_subnets: true
      - name: "access_control"
        mfa_required: true
        role_based: true

# Orchestration Settings
orchestration:
  deployment_engine: "terraform"
  state_management: "remote"
  state_backends:
    aws: "s3"
    azure: "storage_account"
    gcp: "cloud_storage"

  workflow_engine: "airflow"
  workflow_scheduling: "cron"

  monitoring_integration:
    prometheus: true
    grafana: true
    custom_dashboards: true

# AI/ML Integration
ai_integration:
  workload_predictor:
    enabled: true
    model_type: "ensemble"
    features:
      - historical_usage
      - seasonal_patterns
      - business_metrics
    prediction_horizon: 7  # days

  cost_predictor:
    enabled: true
    model_type: "regression"
    features:
      - resource_usage
      - pricing_trends
      - demand_patterns
    prediction_horizon: 30  # days

  anomaly_detector:
    enabled: true
    model_type: "isolation_forest"
    features:
      - cost_variance
      - performance_metrics
      - usage_patterns
    alert_threshold: 0.8

# Performance Settings
performance:
  api_timeout: 30  # seconds
  retry_attempts: 3
  batch_size: 100
  parallel_operations: 10
  cache_ttl: 300  # seconds
