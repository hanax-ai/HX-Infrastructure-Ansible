
# Nginx canary routing configuration
# Generated by Ansible on {{ ansible_date_time.iso8601 }}

# Split configuration for canary deployment
split_clients $remote_addr $variant {
    {{ canary_percentage }}% canary;
    * production;
}

upstream hx_infrastructure_production {
    {% for host in groups['production'] | default([ansible_default_ipv4.address]) %}
    server {{ host }}:{{ production_port | default(8080) }} weight=1 max_fails=3 fail_timeout=30s;
    {% endfor %}
    keepalive 32;
}

upstream hx_infrastructure_canary {
    {% for host in groups['canary'] | default([ansible_default_ipv4.address]) %}
    server {{ host }}:{{ canary_port | default(8082) }} weight=1 max_fails=3 fail_timeout=30s;
    {% endfor %}
    keepalive 32;
}

server {
    listen 80;
    server_name {{ ansible_fqdn | default(ansible_hostname) }};
    
    # Canary routing logic
    location / {
        if ($variant = "canary") {
            proxy_pass https://hx_infrastructure_canary;
        }
        proxy_pass https://hx_infrastructure_production;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Canary-Variant $variant;
        
        # Production settings
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }
    
    # Health checks for both environments
    location /health {
        if ($variant = "canary") {
            proxy_pass https://hx_infrastructure_canary/health;
        }
        proxy_pass https://hx_infrastructure_production/health;
        
        proxy_set_header Host $host;
        proxy_connect_timeout 5s;
        proxy_send_timeout 5s;
        proxy_read_timeout 5s;
    }
    
    # Canary metrics endpoint
    location /canary/metrics {
        proxy_pass https://hx_infrastructure_canary/metrics;
        proxy_set_header Host $host;
        
        # Restrict access to monitoring systems
        allow 127.0.0.1;
        allow {{ ansible_default_ipv4.network }}/{{ ansible_default_ipv4.netmask }};
        deny all;
    }
}
