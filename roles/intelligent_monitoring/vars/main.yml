---
# Intelligent Monitoring Configuration
intelligent_monitoring:
  enabled: true

  anomaly_detection:
    enabled: true
    algorithms:
      - name: "isolation_forest"
        sensitivity: 0.1
        contamination: 0.05
      - name: "lstm_autoencoder"
        sequence_length: 60
        threshold: 0.95

    metrics_to_monitor:
      - cpu_utilization
      - memory_utilization
      - disk_io
      - network_io
      - response_time
      - error_rate
      - request_rate

    alert_thresholds:
      anomaly_score: 0.8
      consecutive_anomalies: 3
      alert_cooldown: 300  # seconds

  predictive_scaling:
    enabled: true
    models:
      - name: "traffic_predictor"
        type: "lstm"
        features: ["request_rate", "hour_of_day", "day_of_week"]
        prediction_horizon: 3600  # 1 hour
      - name: "resource_predictor"
        type: "arima"
        features: ["cpu_utilization", "memory_utilization"]
        prediction_horizon: 1800  # 30 minutes

    scaling_policies:
      scale_up_threshold: 0.8
      scale_down_threshold: 0.3
      min_instances: 2
      max_instances: 20
      cooldown_period: 300

  cost_optimization:
    enabled: true
    strategies:
      - name: "right_sizing"
        frequency: "daily"
        threshold: 0.3  # 30% utilization
      - name: "spot_instance_optimization"
        frequency: "hourly"
        savings_target: 0.4  # 40% cost reduction

    budget_alerts:
      daily_threshold: 1000
      monthly_threshold: 25000
      alert_recipients:
        - "ops-team@hanax.ai"
        - "finance@hanax.ai"

# AI Model Configuration
ai_models:
  storage_path: "/opt/hx/ai-models/monitoring"
  update_frequency: "daily"
  training_data_retention: 90  # days

  model_configs:
    anomaly_detection:
      retrain_threshold: 0.1  # accuracy drop
      min_training_samples: 1000

    predictive_scaling:
      retrain_threshold: 0.15
      min_training_samples: 2000

# Integration Settings
integrations:
  prometheus:
    url: "{{ prometheus_url | default('http://localhost:9090') }}"
    scrape_interval: 15

  grafana:
    url: "{{ grafana_url | default('http://localhost:3000') }}"
    api_key: "{{ grafana_api_key | default('') }}"

  alertmanager:
    url: "{{ alertmanager_url | default('http://localhost:9093') }}"
    webhook_url: "http://localhost:8081/alerts"

# Performance Settings
performance:
  batch_size: 1000
  processing_interval: 60  # seconds
  max_memory_usage: "2GB"
  parallel_workers: 4
