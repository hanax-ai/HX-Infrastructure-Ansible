---

---
# Reliability Monitor Role - Advanced Health Checking and Service Recovery
# Implements comprehensive monitoring, health checks, and automated recovery

# Service monitoring configuration
service_monitoring:
  enabled: true
  check_interval: 30  # seconds
  timeout: 10  # seconds
  retries: 3
  escalation_threshold: 5  # failures before escalation

# Health check configuration
health_checks:
  enabled: true
  types:
    - service_status
    - port_connectivity
    - process_monitoring
    - resource_utilization
    - log_analysis

  # Service-specific health checks
  services: []
    # Example:
    # - name: "nginx"
    #   type: "systemd"
    #   port: 80
    #   process: "nginx"
    #   config_file: "/etc/nginx/nginx.conf"
    #   log_file: "/var/log/nginx/error.log"

# Circuit breaker configuration
circuit_breaker:
  enabled: true
  failure_threshold: 5
  recovery_timeout: 60  # seconds
  half_open_max_calls: 3
  success_threshold: 2

# Service recovery automation
service_recovery:
  enabled: true
  strategies:
    - restart_service
    - reload_configuration
    - failover_to_backup
    - scale_resources

  # Recovery escalation
  escalation:
    level_1: "restart_service"
    level_2: "reload_configuration"
    level_3: "failover_to_backup"
    level_4: "manual_intervention"

# Performance monitoring
performance_monitoring:
  enabled: true
  metrics:
    - cpu_usage
    - memory_usage
    - disk_usage
    - network_io
    - response_time

  thresholds:
    cpu_warning: 70
    cpu_critical: 90
    memory_warning: 80
    memory_critical: 95
    disk_warning: 85
    disk_critical: 95

# Error handling and logging
error_handling:
  enabled: true
  log_level: "INFO"  # DEBUG, INFO, WARNING, ERROR, CRITICAL
  log_file: "/var/log/ansible/reliability_monitor.log"
  max_log_size: "100MB"
  log_retention_days: 30

  # Alert configuration
  alerting:
    enabled: true
    channels:
      - email
      - slack
      - webhook

    # Alert thresholds
    thresholds:
      service_down: "CRITICAL"
      performance_degraded: "WARNING"
      recovery_failed: "CRITICAL"

# Backup verification
backup_verification:
  enabled: true
  check_interval: 3600  # seconds (1 hour)
  verification_types:
    - file_integrity
    - backup_completeness
    - restore_test

  backup_locations: []
    # Example:
    # - path: "/backup/database"
    #   type: "database"
    #   retention_days: 30

# Container orchestration support
container_support:
  enabled: false
  orchestrator: "docker"  # docker, kubernetes, podman
  health_check_endpoint: "/health"
  readiness_probe_endpoint: "/ready"
  liveness_probe_endpoint: "/alive"

# Service mesh integration
service_mesh:
  enabled: false
  type: "istio"  # istio, linkerd, consul
  metrics_endpoint: "/metrics"
  tracing_enabled: true

# Advanced monitoring integration
monitoring_integration:
  prometheus:
    enabled: false
    endpoint: "http://localhost:9090"
    push_gateway: "http://localhost:9091"

  grafana:
    enabled: false
    endpoint: "http://localhost:3000"
    dashboard_id: "reliability-monitor"

  elasticsearch:
    enabled: false
    endpoint: "http://localhost:9200"
    index_pattern: "reliability-logs-*"

# Notification settings
notifications:
  enabled: true
  email:
    smtp_server: "localhost"
    smtp_port: 587
    from_address: "ansible@{{ ansible_fqdn }}"
    to_addresses: []

  slack:
    webhook_url: ""
    channel: "#alerts"
    username: "Ansible Reliability Monitor"

  webhook:
    url: ""
    method: "POST"
    headers:
      Content-Type: "application/json"

# Security settings
security:
  encrypt_logs: false
  secure_communications: true
  audit_trail: true
  access_control: true

# Reliability metrics
reliability_metrics:
  track_uptime: true
  track_mttr: true  # Mean Time To Recovery
  track_mtbf: true  # Mean Time Between Failures
  track_availability: true
  sla_target: 99.9  # percentage

# Maintenance windows
maintenance_windows:
  enabled: true
  default_window:
    start_time: "02:00"
    end_time: "04:00"
    timezone: "UTC"
    days: ["Sunday"]

  suppress_alerts_during_maintenance: true
