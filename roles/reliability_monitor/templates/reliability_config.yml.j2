
# Reliability Monitor Configuration
# Generated by Ansible HX Infrastructure Framework

service_monitoring:
  enabled: {{ service_monitoring.enabled | default(true) | to_json }}
  check_interval: {{ service_monitoring.check_interval | default(30) }}
  timeout: {{ service_monitoring.timeout | default(10) }}
  retries: {{ service_monitoring.retries | default(3) }}
  escalation_threshold: {{ service_monitoring.escalation_threshold | default(5) }}

health_checks:
  enabled: {{ health_checks.enabled | default(true) | to_json }}
  types: {{ health_checks.types | default(['service_status', 'port_connectivity', 'process_monitoring', 'resource_utilization', 'log_analysis']) | to_json }}
  services: {{ health_checks.services | default([]) | to_json }}

circuit_breaker:
  enabled: {{ circuit_breaker.enabled | default(true) | to_json }}
  failure_threshold: {{ circuit_breaker.failure_threshold | default(5) }}
  recovery_timeout: {{ circuit_breaker.recovery_timeout | default(60) }}
  half_open_max_calls: {{ circuit_breaker.half_open_max_calls | default(3) }}
  success_threshold: {{ circuit_breaker.success_threshold | default(2) }}

service_recovery:
  enabled: {{ service_recovery.enabled | default(true) | to_json }}
  strategies: {{ service_recovery.strategies | default(['restart_service', 'reload_configuration', 'failover_to_backup', 'scale_resources']) | to_json }}
  escalation: {{ service_recovery.escalation | default({'level_1': 'restart_service', 'level_2': 'reload_configuration', 'level_3': 'failover_to_backup', 'level_4': 'manual_intervention'}) | to_json }}

performance_monitoring:
  enabled: {{ performance_monitoring.enabled | default(true) | to_json }}
  metrics: {{ performance_monitoring.metrics | default(['cpu_usage', 'memory_usage', 'disk_usage', 'network_io', 'response_time']) | to_json }}
  thresholds:
    cpu_warning: {{ performance_monitoring.thresholds.cpu_warning | default(70) }}
    cpu_critical: {{ performance_monitoring.thresholds.cpu_critical | default(90) }}
    memory_warning: {{ performance_monitoring.thresholds.memory_warning | default(80) }}
    memory_critical: {{ performance_monitoring.thresholds.memory_critical | default(95) }}
    disk_warning: {{ performance_monitoring.thresholds.disk_warning | default(85) }}
    disk_critical: {{ performance_monitoring.thresholds.disk_critical | default(95) }}

error_handling:
  enabled: {{ error_handling.enabled | default(true) | to_json }}
  log_level: "{{ error_handling.log_level | default('INFO') }}"
  log_file: "{{ error_handling.log_file | default('/var/log/ansible/reliability_monitor.log') }}"
  max_log_size: "{{ error_handling.max_log_size | default('100MB') }}"
  log_retention_days: {{ error_handling.log_retention_days | default(30) }}
  alerting:
    enabled: {{ error_handling.alerting.enabled | default(true) | to_json }}
    channels: {{ error_handling.alerting.channels | default(['email', 'slack', 'webhook']) | to_json }}
    thresholds:
      service_down: "{{ error_handling.alerting.thresholds.service_down | default('CRITICAL') }}"
      performance_degraded: "{{ error_handling.alerting.thresholds.performance_degraded | default('WARNING') }}"
      recovery_failed: "{{ error_handling.alerting.thresholds.recovery_failed | default('CRITICAL') }}"

backup_verification:
  enabled: {{ backup_verification.enabled | default(true) | to_json }}
  check_interval: {{ backup_verification.check_interval | default(3600) }}
  verification_types: {{ backup_verification.verification_types | default(['file_integrity', 'backup_completeness', 'restore_test']) | to_json }}
  backup_locations: {{ backup_verification.backup_locations | default([]) | to_json }}

container_support:
  enabled: {{ container_support.enabled | default(false) | to_json }}
  orchestrator: "{{ container_support.orchestrator | default('docker') }}"
  health_check_endpoint: "{{ container_support.health_check_endpoint | default('/health') }}"
  readiness_probe_endpoint: "{{ container_support.readiness_probe_endpoint | default('/ready') }}"
  liveness_probe_endpoint: "{{ container_support.liveness_probe_endpoint | default('/alive') }}"

service_mesh:
  enabled: {{ service_mesh.enabled | default(false) | to_json }}
  type: "{{ service_mesh.type | default('istio') }}"
  metrics_endpoint: "{{ service_mesh.metrics_endpoint | default('/metrics') }}"
  tracing_enabled: {{ service_mesh.tracing_enabled | default(true) | to_json }}

monitoring_integration:
  prometheus:
    enabled: {{ monitoring_integration.prometheus.enabled | default(false) | to_json }}
    endpoint: "{{ monitoring_integration.prometheus.endpoint | default('http://localhost:9090') }}"
    push_gateway: "{{ monitoring_integration.prometheus.push_gateway | default('http://localhost:9091') }}"
  grafana:
    enabled: {{ monitoring_integration.grafana.enabled | default(false) | to_json }}
    endpoint: "{{ monitoring_integration.grafana.endpoint | default('http://localhost:3000') }}"
    dashboard_id: "{{ monitoring_integration.grafana.dashboard_id | default('reliability-monitor') }}"
  elasticsearch:
    enabled: {{ monitoring_integration.elasticsearch.enabled | default(false) | to_json }}
    endpoint: "{{ monitoring_integration.elasticsearch.endpoint | default('http://localhost:9200') }}"
    index_pattern: "{{ monitoring_integration.elasticsearch.index_pattern | default('reliability-logs-*') }}"

notifications:
  enabled: {{ notifications.enabled | default(true) | to_json }}
  email:
    smtp_server: "{{ notifications.email.smtp_server | default('localhost') }}"
    smtp_port: {{ notifications.email.smtp_port | default(587) }}
    from_address: "{{ notifications.email.from_address | default('ansible@' + ansible_fqdn) }}"
    to_addresses: {{ notifications.email.to_addresses | default([]) | to_json }}
  slack:
    webhook_url: "{{ notifications.slack.webhook_url | default('') }}"
    channel: "{{ notifications.slack.channel | default('#alerts') }}"
    username: "{{ notifications.slack.username | default('Ansible Reliability Monitor') }}"
  webhook:
    url: "{{ notifications.webhook.url | default('') }}"
    method: "{{ notifications.webhook.method | default('POST') }}"
    headers: {{ notifications.webhook.headers | default({'Content-Type': 'application/json'}) | to_json }}

security:
  encrypt_logs: {{ security.encrypt_logs | default(false) | to_json }}
  secure_communications: {{ security.secure_communications | default(true) | to_json }}
  audit_trail: {{ security.audit_trail | default(true) | to_json }}
  access_control: {{ security.access_control | default(true) | to_json }}

reliability_metrics:
  track_uptime: {{ reliability_metrics.track_uptime | default(true) | to_json }}
  track_mttr: {{ reliability_metrics.track_mttr | default(true) | to_json }}
  track_mtbf: {{ reliability_metrics.track_mtbf | default(true) | to_json }}
  track_availability: {{ reliability_metrics.track_availability | default(true) | to_json }}
  sla_target: {{ reliability_metrics.sla_target | default(99.9) }}

maintenance_windows:
  enabled: {{ maintenance_windows.enabled | default(true) | to_json }}
  default_window:
    start_time: "{{ maintenance_windows.default_window.start_time | default('02:00') }}"
    end_time: "{{ maintenance_windows.default_window.end_time | default('04:00') }}"
    timezone: "{{ maintenance_windows.default_window.timezone | default('UTC') }}"
    days: {{ maintenance_windows.default_window.days | default(['Sunday']) | to_json }}
  suppress_alerts_during_maintenance: {{ maintenance_windows.suppress_alerts_during_maintenance | default(true) | to_json }}

# Generated at: {{ ansible_date_time.iso8601 }}
# Ansible managed - do not edit manually
